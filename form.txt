# template 0926
# 다만.. 여기서 css하고 분리해서 form templete 작성. 그렇기에 css/styles.css 필수!
# 여기서 google font : Hi melody, Orbit가 쓰임.

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>document</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Hi+Melody&family=Orbit&display=swap" rel="stylesheet">
    <!--    <link rel="stylesheet" href="../css/init.css">-->
    <link rel="stylesheet" href="./css/styles.css">
</head>

<body class="table h_scene">
    <header class="t_row">
        <div class="t_cell">
            <h1>title</h1>
        </div>
    </header>
    <content class="t_row">
        <div class="t_cell">
            <div id="ex">
                
            </div>
        </div>
    </content>
    <footer class="t_row">
       <div class="t_cell">
        <hr>
        <p>
            <button type="button" onclick="location.href='../../index.html'" value="홈으로" >HOME</button>
        </p>
       </div>
    </footer>
    <!-- 마크다운 문법적용을 위한 스크립트들 -->
    <script src="https://cdn.jsdelivr.net/npm/marked/lib/marked.umd.js"></script>
    <script type="module" src="https://md-block.verou.me/md-block.js"></script>
    <script src="./js/global.js"></script>
    <script type="text/javascript">
        const op_html = document.querySelector('#ex')
    </script>
</body>

</html>


=================================================================

## css reset.

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}


=================================================================

styles.css base form

/* 
    구성순서는 기본태그 > 특수태그(예: header 등등..) > ID > Class > 반응형적용 등등.. 
*/

html, body {
    height: 100%;
}

header h1 {
    border-bottom: 3px solid black;
    padding: 26px;
    
    font-family: 'Hi Melody', cursive; 
    font-size: 3em
}

button {
    font-family: 'Orbit', sans-serif; 
    width: 100px;
}

header {
    height: 25%;
}

content {
    
}

footer {
    height: 10%;
}

footer p {
    text-align: center;
}


/*    class    */
.h_scene { width: 100%; }
.f_scene { width: 100%; height: 100%; }
.table { display: table }
.t_row { display: table-row }
.t_cell {
    display: table-cell;
}
.non_bline { 
    box-sizing: border-box; 
/*        calc( target - border-width/2 ) 이렇게 해도 됨.    */
/*        다만.. /2 할경우 전부 적용해야함.    */
}




/* media : react */
@media (max-width: 1280px){
    body {
        background-color: beige;
    }
}

@media (max-width: 780px) {
    body {
        background-color: #65dfeb;
    }
}

@media (max-width: 500px) {
    body {
        background-color: #a05ce9;
    }
}



=================================================================================


// global.js 전역 자바스크립트 템플릿 작성.




const strout = {
    html: instr => {
        return `${instr}<br>`
    },
    clogln: instr => {
        return `${instr}\n`
    }
}

const ArrArange = (min, max) => [...Array(max).keys()].map(key => key + min)



const Gen_rdNumber = (max, min) => {
    let array = new Uint8Array(2);
    crypto.getRandomValues(array);

    // 소금치는 처리. 의미는 없어도..
    return ( ( array[1] + (array[0] * 3)) % max ) + min
}

const ArrRandrange = (len, min, max) => Array(len).fill().map( x => x = Gen_rdNumber(300, 1) )

const HtmlInObj = (obj, ...html) => obj.innerHTML += html